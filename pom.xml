<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.3.3</version>
		<relativePath />
		<!-- lookup parent from repository -->
	</parent>

	<groupId>eu.solven.kumite</groupId>
	<artifactId>aggregator</artifactId>
	<version>1.0-SNAPSHOT</version>

	<packaging>pom</packaging>

	<name>aggregator</name>

	<modules>
		<!-- Resources shared between the server and the players -->
		<module>public</module>
		<!-- Host the contests, and serves the API -->
		<module>server</module>
		<!-- Demonstrate how to list and play contest -->
		<module>player</module>
		<!-- Starts a server and a player in the same JVM -->
		<module>monolith</module>
		<!-- Use Redis as persistence layer -->
		<module>redis</module>
	</modules>

	<properties>
		<java.version>21</java.version>

		<spotless.version>2.44.0.BETA2</spotless.version>
		<cleanthat.version>2.21</cleanthat.version>

		<!-- By default (i.e. in local environments), check for code formatting AFTER trying automatic fixes. -->
		<!-- We suppose the developper would see the fixed and include them in his commit. -->
		<!-- In the CI, we check BEFORE automatic fixes as the CI should report early invalid code -->
		<staticChecks>process-sources</staticChecks>
		<!-- SpotBugs works on bytecode, hence require compilation to be done -->
		<!-- http://maven.apache.org/ref/3.8.1/maven-core/lifecycles.html -->
		<!-- https://github.com/spotbugs/spotbugs-maven-plugin/issues/75 -->
		<staticChecksOverBytecode>process-classes</staticChecksOverBytecode>

	</properties>

	<dependencies>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<scope>provided</scope>
		</dependency>
	</dependencies>

	<build>
		<pluginManagement>
			<plugins>
				<!-- mvn com.diffplug.spotless:spotless-maven-plugin:apply -->
				<!-- mvn com.diffplug.spotless:spotless-maven-plugin:check -->
				<plugin>
					<groupId>com.diffplug.spotless</groupId>
					<artifactId>spotless-maven-plugin</artifactId>
					<version>${spotless.version}</version>
					<configuration>
						<ratchetFrom>origin/master</ratchetFrom>

						<formats>
							<!-- you can define as many formats as you want, each is independent -->
							<format>
								<!-- define the files to apply to -->
								<includes>
									<include>.gitattributes</include>
									<include>.gitignore</include>
								</includes>
								<!-- define the steps to apply to those files -->
								<trimTrailingWhitespace />
								<endWithNewline />
								<indent>
									<tabs>true</tabs>
									<spacesPerTab>4</spacesPerTab>
								</indent>
							</format>
						</formats>

						<pom>
							<includes>
								<include>pom.xml</include>
							</includes>

							<!-- https://github.com/diffplug/spotless/tree/main/plugin-maven#sortpom -->
							<sortPom>
								<!-- We like empty elements, while plugin default configuration would expand them -->
								<expandEmptyElements>false</expandEmptyElements>

								<!-- https://github.com/Ekryd/sortpom/issues/75 -->
								<spaceBeforeCloseEmptyElement>true</spaceBeforeCloseEmptyElement>

								<!-- https://github.com/Ekryd/sortpom/wiki/Parameters#for-both-the-sort-and-verify-goal -->
								<!-- -1 means '\t' -->
								<nrOfIndentSpace>-1</nrOfIndentSpace>
							</sortPom>
						</pom>

						<markdown>
							<endWithNewline />
							<indent>
								<tabs>true</tabs>
								<spacesPerTab>4</spacesPerTab>
							</indent>

							<includes>
								<include>*.md</include>
								<include>src/**/*.md</include>
							</includes>

							<flexmark />
						</markdown>

						<java>
							<cleanthat>
								<version>${cleanthat.version}</version>
								<sourceJdk>${maven.compiler.source}</sourceJdk>
								<mutators>
									<mutator>SafeAndConsensual</mutator>
									<mutator>SafeButNotConsensual</mutator>
									<mutator>SafeButControversial</mutator>
									<mutator>Guava</mutator>
								</mutators>
								<excludedMutators>
									<!-- PMD recommends not using `var` -->
									<excludedMutator>LocalVariableTypeInference</excludedMutator>
									<!-- Small texts are often easier to read with `\r\n` than in a text block -->
									<excludedMutator>UseTextBlocks</excludedMutator>
								</excludedMutators>
								<includeDraft>true</includeDraft>
							</cleanthat>

							<removeUnusedImports>
								<engine>cleanthat-javaparser-unnecessaryimport</engine>
							</removeUnusedImports>

							<importOrder>
								<file>${maven.multiModuleProjectDirectory}/build-tools/src/main/resources/style/eclipse.importorder</file>
								<!--order>java,javax,org,com</order-->
							</importOrder>

							<eclipse>
								<!-- From Pepper -->
								<file>${maven.multiModuleProjectDirectory}/build-tools/src/main/resources/style/eclipse_java_code_formatter.xml</file>
							</eclipse>
						</java>

						<json>
							<includes>
								<include>*.json</include>
								<include>src/**/*.json</include>
							</includes>
							<excludes>
								<exclude>package-lock.json</exclude>
							</excludes>

							<indent>
								<tabs>true</tabs>
								<spacesPerTab>4</spacesPerTab>
							</indent>

							<gson>
								<sortByKeys>true</sortByKeys>
							</gson>
						</json>

						<!-- yaml formatting is disabled as it drops comments -->
						<!--						<yaml>-->
						<!--							<includes>-->
						<!--								<include>src/**/*.yaml</include>-->
						<!--								<include>src/**/*.yml</include>-->
						<!--							</includes>-->

						<!--							<jackson>-->

						<!--								<yamlFeatures>-->
						<!--									<WRITE_DOC_START_MARKER>false</WRITE_DOC_START_MARKER>-->
						<!--									<MINIMIZE_QUOTES>true</MINIMIZE_QUOTES>-->
						<!--								</yamlFeatures>-->
						<!--							</jackson>-->
						<!--						</yaml>-->

						<javascript>
							<includes>
								<!-- Do not include HTML and Vue files -->
								<!-- https://biomejs.dev/internals/language-support/#html-super-languages-support -->
								<include>src/**/*.js</include>
							</includes>

							<!-- https://biomejs.dev/ -->
							<biome>
								<!-- Download Biome from the network if not already downloaded, see below for more info  -->
								<version>1.8.3</version>

								<!-- (optional) Path to the directory with the biome.json config file -->
								<configPath>${maven.multiModuleProjectDirectory}/build-tools/src/main/resources/style/</configPath>

								<!-- (optional) Biome will auto detect the language based on the file extension. -->
								<!-- See below for possible values. -->
								<!--        <language>js</language>-->
							</biome>
						</javascript>
					</configuration>

					<executions>
						<!-- https://github.com/diffplug/spotless/tree/main/plugin-maven#binding-to-maven-phase -->
						<execution>
							<id>apply</id>
							<goals>
								<goal>apply</goal>
							</goals>
							<!-- runs at process-sources phase by default -->
							<phase>process-sources</phase>
						</execution>
						<execution>
							<id>check</id>
							<goals>
								<goal>check</goal>
								<!-- runs at verify phase by default -->
							</goals>
							<phase>${staticChecks}</phase>
						</execution>
					</executions>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
</project>
